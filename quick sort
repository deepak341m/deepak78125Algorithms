#include <iostream>
#include <fstream>
#include <sys/time.h>
using namespace std;
 
 int comps;

void swap(int* a, int* b) 
{ 
    int t = *a; 
    *a = *b; 
    *b = t; 
} 
 

int partition (int arr[], int low, int high) 
{ 
    int pivot = arr[high]; 
    int i = (low - 1); 
 
    for (int j = low; j <= high - 1; j++) 
    { 
       
        if (arr[j] < pivot) 
        { 
            i++; 
            arr[i]=arr[j];
        } 
        comps++;
    } 
    arr[i + 1]=arr[high]; 
    return (i + 1); 
} 
 

void quickSort(int arr[], int low, int high) 
{ 
    if (low < high) 
    { 
       
        int pi = partition(arr, low, high); 
 
        quickSort(arr, low, pi - 1); 
        quickSort(arr, pi + 1, high); 
    } 
} 
 
void printArray(int arr[], int size) 
{ 
    int i; 
    for (i = 0; i < size; i++) 
        cout << arr[i] << " "; 
    cout << endl; 
} 
int main()
{
  // Initialize srand 
  srand(time(0));

  // Number of iterations
  int n = 100;

  // Opening and initializing file
  ofstream outputFile("QuickSort.csv");
  outputFile << "arr_size,n_comps";

  for(int i = 0; i <= n; i++)
  {
    // Taking a random size ranging from 30 to 1000
    int size = rand()%970 + 30;
    int *arr = new int[size];

    // Initializing array with random values
    for(int j = 0; j < size; j++)
    {
      arr[j] = rand()%1000000;
    }
      cout << "\n------------------------------------\n";
      cout << "Array " << i+1 << ": \n";

      // Initializing comps and applying quickSort sort
      comps = 0;
      quickSort(arr,0, size-1);

      // Printing the results
      cout << "No. of elements: " << size << endl;
      cout << "No. of comparisons: " << comps << endl;

      // Saving data to file
      outputFile << "\n" << size << "," << comps;
    }

    outputFile.close(); // Close the file
    cout << endl;
    return 0;
}
